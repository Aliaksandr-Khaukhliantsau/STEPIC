# Finite
# simple
# continued
# fraction(wiki) -− это
# дробь
# вида
#
# a_0 + \dfrac1
# {a_1 + \dfrac1
# {a_2 + \dfrac1
# {\ddots + \dfrac1
# {a_n}}}}a
# 0
# ​
# +
# a
# 1
# ​
# +
# a
# 2
# ​
# +
# ⋱+
# a
# n
# ​
#
# 1
# ​
#
# 1
# ​
#
# 1
# ​
#
# 1
# ​
#
#
# Известно, что
# любую
# обыкновенную
# дробь
# можно
# записать
# в
# виде
# конечной
# простой
# непрерывной
# дроби.
#
# Напишите
# программу, которая
# преобразует
# обыкновенную
# дробь
# в
# последовательность
# коэффициентов
# a_0, a_1, \ldots, a_na
# 0
# ​
# , a
# 1
# ​
# , …, a
# n
# ​
# .
#
# Например, дроби
# 239 / 30239 / 30
# будет
# соответствовать
# непрерывная
# дробь
#
# 7 + \dfrac1
# {1 + \dfrac1
# {29}}7 +
# 1 +
# 29
# 1
# ​
#
# 1
# ​
#
#
# соответственно, коэффициенты
# будут
# равны
# 7, 1
# и
# 29.
#
# Формат
# ввода:
# Строка, содержащая
# обыкновенную
# дробь
# в
# формате
# числитель / знаменатель.
#
# Формат
# вывода:
# Строка
# с
# последовательностью
# коэффициентов, записанных
# через
# пробел.
#
# Sample
# Input:
#
# 239/30
# Sample
# Output:
#
# 7 1 29


# решение №1
# import math
#
#
# def func():
#     my_inp = input().split('/')
#     a, b = int(my_inp[0]), int(my_inp[1])
#     result = ''
#
#     while True:
#         try:
#             x = math.trunc(a / b)
#             result += str(x) + ' '
#             buff = b
#             b = a - (x * b)
#             a = buff
#         except:
#             print(result[0:-1])
#             break
#
#
# func()


# решение №1
a, b = map(int, input().split('/'))
while b:
    print(a // b, end=' ')
    a, b = b, a % b
