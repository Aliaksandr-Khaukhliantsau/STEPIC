# Кодирование длин серий — это базовый алгоритм сжатия данных.
#
# В этой задаче мы реализуем одну из самых простых его вариантов.
#
# На вход алгоритму подаётся строка, содержащая символы латинского алфавита. Эта строка разбивается на группы
# одинаковых символов, идущих подряд ("серии"). Каждая серия характеризуется повторяющимся символом и количеством
# повторений. Именно эта информация и записывается в код: сначала пишется длина серии повторяющихся символов,
# затем сам символ. У серий длиной в один символ количество повторений будем опускать.
#
# Например, рассмотрим строку
#
# aaabccccCCaB
# Разобъём её на серии
# aaa b cccc CC a B
# После чего закодируем серии и получим итоговую строку, которую и будем считать результатом работы алгоритма.
# 3ab4c2CaB
# Формат ввода:
# Одна строка, содержащая произвольные символы латинского алфавита.
#
# Формат вывода:
# Строка, содержащая закодированную последовательность.
#
# Sample Input 1:
#
# aaabccccCCaB
# Sample Output 1:
#
# 3ab4c2CaB
# Sample Input 2:
#
# a
# Sample Output 2:
#
# a

# первый вариант
# def func():
#     my_str = input()
#     result = ''
#     count = 1
#     for i in range(len(my_str)):
#         if i < len(my_str) - 1:
#             if my_str[i + 1] == my_str[i]:
#                 count += 1
#             else:
#                 if count > 1:
#                     result += f'{count}{my_str[i]}'
#                 else:
#                     result += f'{my_str[i]}'
#                 count = 1
#         elif count > 1:
#             result += f'{count}{my_str[i]}'
#         else:
#             result += f'{my_str[i]}'
#     return result
#
#
# print(func())


# второй вариант
def func():
    my_str = input() + '/'  # добавляем лишний символ в строку, чтобы не производить проверку последней позиции в строке
    result = ''
    count = 1
    for i in range(len(my_str) - 1):
        if my_str[i + 1] == my_str[i]:
            count += 1
        else:
            if count > 1:
                result += f'{count}{my_str[i]}'
            else:
                result += f'{my_str[i]}'
            count = 1
    return result


print(func())
